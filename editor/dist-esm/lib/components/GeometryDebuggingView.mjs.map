{
  "version": 3,
  "sources": ["../../../src/lib/components/GeometryDebuggingView.tsx"],
  "sourcesContent": ["import { track } from '@tldraw/state'\nimport { modulate } from '@tldraw/utils'\nimport { HIT_TEST_MARGIN } from '../constants'\nimport { useEditor } from '../hooks/useEditor'\n\nexport const GeometryDebuggingView = track(function GeometryDebuggingView({\n\tshowStroke = true,\n\tshowVertices = true,\n\tshowClosestPointOnOutline = false,\n}: {\n\tshowStroke?: boolean\n\tshowVertices?: boolean\n\tshowClosestPointOnOutline?: boolean\n}) {\n\tconst editor = useEditor()\n\n\tconst {\n\t\tzoomLevel,\n\t\trenderingShapes,\n\t\tinputs: { currentPagePoint },\n\t} = editor\n\n\treturn (\n\t\t<svg\n\t\t\tstyle={{\n\t\t\t\tposition: 'absolute',\n\t\t\t\tpointerEvents: 'none',\n\t\t\t\tzIndex: 999999999,\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\toverflow: 'visible',\n\t\t\t}}\n\t\t>\n\t\t\t{renderingShapes.map((result) => {\n\t\t\t\tconst shape = editor.getShape(result.id)!\n\n\t\t\t\tif (shape.type === 'group') return null\n\n\t\t\t\tconst geometry = editor.getShapeGeometry(shape)\n\t\t\t\tconst pageTransform = editor.getShapePageTransform(shape)!\n\n\t\t\t\tconst pointInShapeSpace = editor.getPointInShapeSpace(shape, currentPagePoint)\n\t\t\t\tconst nearestPointOnShape = geometry.nearestPoint(pointInShapeSpace)\n\t\t\t\tconst distanceToPoint = geometry.distanceToPoint(pointInShapeSpace)\n\n\t\t\t\tconst { vertices } = geometry\n\n\t\t\t\treturn (\n\t\t\t\t\t<g key={result.id + '_outline'} transform={pageTransform.toCssString()}>\n\t\t\t\t\t\t{showStroke && (\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tstroke=\"red\"\n\t\t\t\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\topacity={0.5}\n\t\t\t\t\t\t\t\td={geometry.toSimpleSvgPath()}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{showVertices &&\n\t\t\t\t\t\t\tvertices.map((v, i) => (\n\t\t\t\t\t\t\t\t<circle\n\t\t\t\t\t\t\t\t\tkey={`v${i}`}\n\t\t\t\t\t\t\t\t\tcx={v.x}\n\t\t\t\t\t\t\t\t\tcy={v.y}\n\t\t\t\t\t\t\t\t\tr={2}\n\t\t\t\t\t\t\t\t\tfill={`hsl(${modulate(i, [0, vertices.length - 1], [120, 0])}, 100%, 50%)`}\n\t\t\t\t\t\t\t\t\tstroke=\"black\"\n\t\t\t\t\t\t\t\t\tstrokeWidth=\"1\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t{distanceToPoint > 0 && showClosestPointOnOutline && (\n\t\t\t\t\t\t\t<line\n\t\t\t\t\t\t\t\tx1={nearestPointOnShape.x}\n\t\t\t\t\t\t\t\ty1={nearestPointOnShape.y}\n\t\t\t\t\t\t\t\tx2={pointInShapeSpace.x}\n\t\t\t\t\t\t\t\ty2={pointInShapeSpace.y}\n\t\t\t\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\t\t\t\tstroke={distanceToPoint < HIT_TEST_MARGIN / zoomLevel ? 'red' : 'pink'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</g>\n\t\t\t\t)\n\t\t\t})}\n\t\t</svg>\n\t)\n})\n"],
  "mappings": "AAgDK,SAEE,KAFF;AAhDL,SAAS,aAAa;AACtB,SAAS,gBAAgB;AACzB,SAAS,uBAAuB;AAChC,SAAS,iBAAiB;AAEnB,MAAM,wBAAwB,MAAM,SAASA,uBAAsB;AAAA,EACzE,aAAa;AAAA,EACb,eAAe;AAAA,EACf,4BAA4B;AAC7B,GAIG;AACF,QAAM,SAAS,UAAU;AAEzB,QAAM;AAAA,IACL;AAAA,IACA;AAAA,IACA,QAAQ,EAAE,iBAAiB;AAAA,EAC5B,IAAI;AAEJ,SACC;AAAA,IAAC;AAAA;AAAA,MACA,OAAO;AAAA,QACN,UAAU;AAAA,QACV,eAAe;AAAA,QACf,QAAQ;AAAA,QACR,KAAK;AAAA,QACL,MAAM;AAAA,QACN,UAAU;AAAA,MACX;AAAA,MAEC,0BAAgB,IAAI,CAAC,WAAW;AAChC,cAAM,QAAQ,OAAO,SAAS,OAAO,EAAE;AAEvC,YAAI,MAAM,SAAS;AAAS,iBAAO;AAEnC,cAAM,WAAW,OAAO,iBAAiB,KAAK;AAC9C,cAAM,gBAAgB,OAAO,sBAAsB,KAAK;AAExD,cAAM,oBAAoB,OAAO,qBAAqB,OAAO,gBAAgB;AAC7E,cAAM,sBAAsB,SAAS,aAAa,iBAAiB;AACnE,cAAM,kBAAkB,SAAS,gBAAgB,iBAAiB;AAElE,cAAM,EAAE,SAAS,IAAI;AAErB,eACC,qBAAC,OAA+B,WAAW,cAAc,YAAY,GACnE;AAAA,wBACA;AAAA,YAAC;AAAA;AAAA,cACA,QAAO;AAAA,cACP,aAAa;AAAA,cACb,MAAK;AAAA,cACL,SAAS;AAAA,cACT,GAAG,SAAS,gBAAgB;AAAA;AAAA,UAC7B;AAAA,UAEA,gBACA,SAAS,IAAI,CAAC,GAAG,MAChB;AAAA,YAAC;AAAA;AAAA,cAEA,IAAI,EAAE;AAAA,cACN,IAAI,EAAE;AAAA,cACN,GAAG;AAAA,cACH,MAAM,OAAO,SAAS,GAAG,CAAC,GAAG,SAAS,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AAAA,cAC5D,QAAO;AAAA,cACP,aAAY;AAAA;AAAA,YANP,IAAI,CAAC;AAAA,UAOX,CACA;AAAA,UACD,kBAAkB,KAAK,6BACvB;AAAA,YAAC;AAAA;AAAA,cACA,IAAI,oBAAoB;AAAA,cACxB,IAAI,oBAAoB;AAAA,cACxB,IAAI,kBAAkB;AAAA,cACtB,IAAI,kBAAkB;AAAA,cACtB,aAAa;AAAA,cACb,QAAQ,kBAAkB,kBAAkB,YAAY,QAAQ;AAAA;AAAA,UACjE;AAAA,aA9BM,OAAO,KAAK,UAgCpB;AAAA,MAEF,CAAC;AAAA;AAAA,EACF;AAEF,CAAC;",
  "names": ["GeometryDebuggingView"]
}
