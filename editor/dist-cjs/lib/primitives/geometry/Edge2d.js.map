{
  "version": 3,
  "sources": ["../../../../src/lib/primitives/geometry/Edge2d.ts"],
  "sourcesContent": ["import { Vec2d } from '../Vec2d'\nimport { linesIntersect } from '../intersect'\nimport { Geometry2d } from './Geometry2d'\n\n/** @public */\nexport class Edge2d extends Geometry2d {\n\tstart: Vec2d\n\tend: Vec2d\n\td: Vec2d\n\tu: Vec2d\n\tlength: number\n\n\tconstructor(config: { start: Vec2d; end: Vec2d; isSnappable?: boolean }) {\n\t\tsuper({ ...config, isClosed: false, isFilled: false })\n\t\tconst { start, end } = config\n\n\t\tthis.start = start\n\t\tthis.end = end\n\n\t\tthis.d = start.clone().sub(end)\n\t\tthis.u = this.d.clone().uni()\n\t\tthis.length = this.d.len()\n\t}\n\n\tmidPoint(): Vec2d {\n\t\treturn this.start.lrp(this.end, 0.5)\n\t}\n\n\toverride getVertices(): Vec2d[] {\n\t\treturn [this.start, this.end]\n\t}\n\n\toverride nearestPoint(point: Vec2d): Vec2d {\n\t\tconst { start, end, u } = this\n\t\tif (start.equals(end)) return start.clone()\n\t\tconst C = start.clone().add(u.clone().mul(point.clone().sub(start).pry(u)))\n\t\tif (C.x < Math.min(start.x, end.x)) return start.x < end.x ? start : end\n\t\tif (C.x > Math.max(start.x, end.x)) return start.x > end.x ? start : end\n\t\tif (C.y < Math.min(start.y, end.y)) return start.y < end.y ? start : end\n\t\tif (C.y > Math.max(start.y, end.y)) return start.y > end.y ? start : end\n\t\treturn C\n\t}\n\n\toverride hitTestLineSegment(A: Vec2d, B: Vec2d, _zoom: number): boolean {\n\t\treturn linesIntersect(A, B, this.start, this.end)\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,uBAA+B;AAC/B,wBAA2B;AAGpB,MAAM,eAAe,6BAAW;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA,YAAY,QAA6D;AACxE,UAAM,EAAE,GAAG,QAAQ,UAAU,OAAO,UAAU,MAAM,CAAC;AACrD,UAAM,EAAE,OAAO,IAAI,IAAI;AAEvB,SAAK,QAAQ;AACb,SAAK,MAAM;AAEX,SAAK,IAAI,MAAM,MAAM,EAAE,IAAI,GAAG;AAC9B,SAAK,IAAI,KAAK,EAAE,MAAM,EAAE,IAAI;AAC5B,SAAK,SAAS,KAAK,EAAE,IAAI;AAAA,EAC1B;AAAA,EAEA,WAAkB;AACjB,WAAO,KAAK,MAAM,IAAI,KAAK,KAAK,GAAG;AAAA,EACpC;AAAA,EAES,cAAuB;AAC/B,WAAO,CAAC,KAAK,OAAO,KAAK,GAAG;AAAA,EAC7B;AAAA,EAES,aAAa,OAAqB;AAC1C,UAAM,EAAE,OAAO,KAAK,EAAE,IAAI;AAC1B,QAAI,MAAM,OAAO,GAAG;AAAG,aAAO,MAAM,MAAM;AAC1C,UAAM,IAAI,MAAM,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,MAAM,MAAM,EAAE,IAAI,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AAC1E,QAAI,EAAE,IAAI,KAAK,IAAI,MAAM,GAAG,IAAI,CAAC;AAAG,aAAO,MAAM,IAAI,IAAI,IAAI,QAAQ;AACrE,QAAI,EAAE,IAAI,KAAK,IAAI,MAAM,GAAG,IAAI,CAAC;AAAG,aAAO,MAAM,IAAI,IAAI,IAAI,QAAQ;AACrE,QAAI,EAAE,IAAI,KAAK,IAAI,MAAM,GAAG,IAAI,CAAC;AAAG,aAAO,MAAM,IAAI,IAAI,IAAI,QAAQ;AACrE,QAAI,EAAE,IAAI,KAAK,IAAI,MAAM,GAAG,IAAI,CAAC;AAAG,aAAO,MAAM,IAAI,IAAI,IAAI,QAAQ;AACrE,WAAO;AAAA,EACR;AAAA,EAES,mBAAmB,GAAU,GAAU,OAAwB;AACvE,eAAO,iCAAe,GAAG,GAAG,KAAK,OAAO,KAAK,GAAG;AAAA,EACjD;AACD;",
  "names": []
}
