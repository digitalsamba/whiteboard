{
  "version": 3,
  "sources": ["../../../src/lib/hooks/useFocusEvents.ts"],
  "sourcesContent": ["import { debounce } from '@tldraw/utils'\nimport { useLayoutEffect } from 'react'\nimport { useContainer } from './useContainer'\nimport { useEditor } from './useEditor'\n\n/** @internal */\nexport function useFocusEvents(autoFocus: boolean) {\n\tconst editor = useEditor()\n\tconst container = useContainer()\n\n\tuseLayoutEffect(() => {\n\t\tif (!container) return\n\n\t\t// We need to debounce this because when focus changes, the body\n\t\t// becomes focused for a brief moment. Debouncing means that we\n\t\t// check only when focus stops changing: when it settles, what\n\t\t// has it settled on? If it's settled on the container or something\n\t\t// inside of the container, then focus or preserve the current focus;\n\t\t// if not, then turn off focus. Turning off focus is a trigger to\n\t\t// also turn off keyboard shortcuts and other things.\n\t\tconst updateFocus = debounce(() => {\n\t\t\tconst { activeElement } = document\n\t\t\tconst { isFocused: wasFocused } = editor.instanceState\n\t\t\tconst isFocused =\n\t\t\t\tdocument.hasFocus() && (container === activeElement || container.contains(activeElement))\n\n\t\t\tif (wasFocused !== isFocused) {\n\t\t\t\teditor.updateInstanceState({ isFocused })\n\t\t\t\teditor.updateViewportScreenBounds()\n\n\t\t\t\tif (!isFocused) {\n\t\t\t\t\t// When losing focus, run complete() to ensure that any interacts end\n\t\t\t\t\teditor.complete()\n\t\t\t\t}\n\t\t\t}\n\t\t}, 32)\n\n\t\tcontainer.addEventListener('focusin', updateFocus)\n\t\tcontainer.addEventListener('focus', updateFocus)\n\t\tcontainer.addEventListener('focusout', updateFocus)\n\t\tcontainer.addEventListener('blur', updateFocus)\n\n\t\treturn () => {\n\t\t\tcontainer.removeEventListener('focusin', updateFocus)\n\t\t\tcontainer.removeEventListener('focus', updateFocus)\n\t\t\tcontainer.removeEventListener('focusout', updateFocus)\n\t\t\tcontainer.removeEventListener('blur', updateFocus)\n\t\t}\n\t}, [container, editor])\n\n\tuseLayoutEffect(() => {\n\t\tif (autoFocus) {\n\t\t\teditor.getContainer().focus()\n\t\t}\n\t}, [editor, autoFocus])\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AACzB,mBAAgC;AAChC,0BAA6B;AAC7B,uBAA0B;AAGnB,SAAS,eAAe,WAAoB;AAClD,QAAM,aAAS,4BAAU;AACzB,QAAM,gBAAY,kCAAa;AAE/B,oCAAgB,MAAM;AACrB,QAAI,CAAC;AAAW;AAShB,UAAM,kBAAc,uBAAS,MAAM;AAClC,YAAM,EAAE,cAAc,IAAI;AAC1B,YAAM,EAAE,WAAW,WAAW,IAAI,OAAO;AACzC,YAAM,YACL,SAAS,SAAS,MAAM,cAAc,iBAAiB,UAAU,SAAS,aAAa;AAExF,UAAI,eAAe,WAAW;AAC7B,eAAO,oBAAoB,EAAE,UAAU,CAAC;AACxC,eAAO,2BAA2B;AAElC,YAAI,CAAC,WAAW;AAEf,iBAAO,SAAS;AAAA,QACjB;AAAA,MACD;AAAA,IACD,GAAG,EAAE;AAEL,cAAU,iBAAiB,WAAW,WAAW;AACjD,cAAU,iBAAiB,SAAS,WAAW;AAC/C,cAAU,iBAAiB,YAAY,WAAW;AAClD,cAAU,iBAAiB,QAAQ,WAAW;AAE9C,WAAO,MAAM;AACZ,gBAAU,oBAAoB,WAAW,WAAW;AACpD,gBAAU,oBAAoB,SAAS,WAAW;AAClD,gBAAU,oBAAoB,YAAY,WAAW;AACrD,gBAAU,oBAAoB,QAAQ,WAAW;AAAA,IAClD;AAAA,EACD,GAAG,CAAC,WAAW,MAAM,CAAC;AAEtB,oCAAgB,MAAM;AACrB,QAAI,WAAW;AACd,aAAO,aAAa,EAAE,MAAM;AAAA,IAC7B;AAAA,EACD,GAAG,CAAC,QAAQ,SAAS,CAAC;AACvB;",
  "names": []
}
